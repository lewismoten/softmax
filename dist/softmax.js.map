{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;AASE,UAAS,cAAT,CAAwB,EAAxB,EAA4B,eAA5B,EAA6C,WAA7C,EAA0D;;AAE1D;;AAEA,MAAI,OAAO,IAAX;;AAEA,MAAI,YAAJ,EAAkB;;AAEhB,QAAI,eAAe,gBAAgB,GAAhB,CAAoB,OAApB,CAAnB;AACA,cAAU,OAAO,OAAP,GAAiB,KAAK,EAAL,IAAW,YAAY,KAAZ,CAAkB,IAAlB,EAAwB,YAAxB,CAAtC;AAED,GALD,MAKO,IAAI,OAAJ,EAAa;;AAElB,WAAO,EAAP,EAAW,eAAX,EAA4B,SAAS,OAAT,GAAmB;;AAE7C,UAAI,SAAS,KAAK,EAAL,IAAW,YAAY,IAAZ,CAAiB,IAAjB,EAAuB,SAAvB,CAAxB;AACA,aAAO,MAAP;AAED,KALD;AAOD,GATM,MASA;;AAEL,QAAI,gBAAe,gBAAgB,GAAhB,CAAoB,OAApB,EAA6B,IAA7B,CAAnB;AACA,SAAK,EAAL,IAAW,YAAY,KAAZ,CAAkB,IAAlB,EAAwB,aAAxB,CAAX;AAED;;;;;;;;;AAUD,WAAS,OAAT,CAAiB,GAAjB,EAAsB;;AAEpB,WAAO,KAAK,GAAL,CAAP;AAED;;;;;;;AAOD,WAAS,UAAT,GAAsB;;AAEpB,WAAO,OAAO,MAAP,KAAkB,WAAlB,IACL,OAAO,OAAO,OAAd,KAA0B,WAD5B;AAGD;;;;;;;AAOD,WAAS,KAAT,GAAiB;;AAEf,WAAO,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAA9C;AAED;AAEF,CAhEC,EAgEA,IAhEA,CAgEK,QAAQ,EAhEb,EAgEiB,SAhEjB,EAgE4B,EAhE5B,EAgEgC,SAAS,WAAT,GAAuB;;AAEvD;;AAEA,SAAO,OAAP;;;;;;;;AAQA,WAAS,OAAT,CAAiB,MAAjB,EAAyB;;AAEvB,WAAO,GAAP,CAAW,UAAX;;AAEA,QAAI,OAAO,MAAP,KAAkB,CAAtB,EAAyB;;AAEvB,aAAO,CAAC,CAAD,CAAP;AAED;;AAED,QAAM,YAAY,OAAO,GAAP,CAAW,KAAK,GAAhB,CAAlB;AAAA,QACE,QAAQ,UAAU,MAAV,CAAiB,GAAjB,EAAsB,CAAtB,CADV;;AAGA,WAAO,UAAU,GAAV,CAAc,MAAd,EAAsB,KAAtB,CAAP;AAED;;;;;;;;AAQD,WAAS,GAAT,CAAa,MAAb,EAAqB,MAArB,EAA6B;;AAE3B,WAAO,SAAS,MAAhB;AAED;;;;;;;;AASD,WAAS,MAAT,CAAgB,QAAhB,EAA0B;;AAExB,WAAO,WAAW,IAAlB;AAED;;;;;;;;AAQD,WAAS,UAAT,CAAoB,KAApB,EAA2B;;AAEzB,QAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;;AAE7B,YAAM,uBAAuB,KAAvB,CAAN;AAED;;AAED,YAAQ,KAAR;;AAEE,WAAK,QAAL;AACA,WAAK,CAAC,QAAN;AACA,WAAK,OAAO,SAAZ;AACA,WAAK,CAAC,OAAO,SAAb;AACE,cAAM,uBAAuB,KAAvB,CAAN;;AAEF;;AARF;AAYD;;;;;;;AAOD,WAAS,sBAAT,CAAgC,KAAhC,EAAuC;;AAErC,4CAAsC,KAAK,SAAL,CAAe,KAAf,CAAtC;AAED;AAEF,CA7JC,CATF","file":"softmax.js","sourcesContent":["(\r\n  /**\r\n   * Register a module for CommonJS, AMD, and the global namespace.\r\n   *\r\n   * @param  {string} id                  The identity of the module\r\n   * @param  {string[]} dependencyNames   List of dependency names\r\n   * @param  {function} instantiate       Factory method to get the module\r\n   * @return {undefined}\r\n   */\r\n  function registerModule(id, dependencyNames, instantiate) {\r\n\r\n  'use strict';\r\n\r\n  let that = this;\r\n\r\n  if (isCommonJs()) {\r\n\r\n    let dependencies = dependencyNames.map(require);\r\n    exports = module.exports = that[id] = instantiate.apply(null, dependencies);\r\n\r\n  } else if (isAmd()) {\r\n\r\n    define(id, dependencyNames, function factory() {\r\n\r\n      let result = that[id] = instantiate.call(null, arguments);\r\n      return result;\r\n\r\n    });\r\n\r\n  } else {\r\n\r\n    let dependencies = dependencyNames.map(getThis, that);\r\n    that[id] = instantiate.apply(null, dependencies);\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the value of an objects key\r\n   *\r\n   ** @this {object}        The source\r\n   * @param  {string} key   The key\r\n   * @return {*}            The objects key value\r\n   */\r\n  function getThis(key) {\r\n\r\n    return this[key];\r\n\r\n  }\r\n\r\n  /**\r\n   * Determines if the environment appears to be CommonJS\r\n   *\r\n   * @return {boolean} True if environment is CommonJS, otherwise false\r\n   */\r\n  function isCommonJs() {\r\n\r\n    return typeof module !== 'undefined' &&\r\n      typeof module.exports !== 'undefined';\r\n\r\n  }\r\n\r\n  /**\r\n   * Determines if the environment supports Asynchronous module definition (AMD)\r\n   *\r\n   * @return {boolean} True if environment supports AMD, otherwise false\r\n   */\r\n  function isAmd() {\r\n\r\n    return typeof define === 'function' && define.amd;\r\n\r\n  }\r\n\r\n}.call(this || {}, 'softmax', [], function instantiate() {\r\n\r\n  'use strict';\r\n\r\n  return softmax;\r\n\r\n  /**\r\n  * Softmax\r\n  * @param {number[]} values  A list of numbers ranging from -10 to 10\r\n  * @return {number[]}        The normalized list of entries between 0 and 1\r\n  *                           where the sum is 1.\r\n  */\r\n  function softmax(values) {\r\n\r\n    values.map(checkValue);\r\n\r\n    if (values.length === 1) {\r\n\r\n      return [1];\r\n\r\n    }\r\n\r\n    const exponents = values.map(Math.exp),\r\n      total = exponents.reduce(sum, 0);\r\n\r\n    return exponents.map(divide, total);\r\n\r\n  }\r\n\r\n  /**\r\n  * Sum\r\n  * @param {number} augend  The number to whcih an addend is added.\r\n  * @param {number} addend  A number that is added to another.\r\n  * @returns {number}       The sum\r\n  */\r\n  function sum(augend, addend) {\r\n\r\n    return augend + addend;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n  * Divide\r\n  ** @this {number}           The divisor\r\n  * @param {number} dividend  The number to be divided\r\n  * @returns {number}         The quotient\r\n  */\r\n  function divide(dividend) {\r\n\r\n    return dividend / this;\r\n\r\n  }\r\n\r\n  /**\r\n  * Checks the value to determine if it is valid\r\n  * @param {*} value                  The value\r\n  * @throws {invalidArgumentMessage}  The value must be a number in-range\r\n  * @returns {undefined}\r\n  */\r\n  function checkValue(value) {\r\n\r\n    if (typeof value !== 'number') {\r\n\r\n      throw invalidArgumentMessage(value);\r\n\r\n    }\r\n\r\n    switch (value) {\r\n\r\n      case Infinity:\r\n      case -Infinity:\r\n      case Number.MAX_VALUE:\r\n      case -Number.MAX_VALUE:\r\n        throw invalidArgumentMessage(value);\r\n\r\n      default:\r\n\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n  * An invalid argument message\r\n  * @param {*} value    The value of the argument\r\n  * @returns {string}   The message indicating that the value is invalid.\r\n  */\r\n  function invalidArgumentMessage(value) {\r\n\r\n    return `Invalid argument specified: ${JSON.stringify(value)}`;\r\n\r\n  }\r\n\r\n}));\r\n"]}